#1116
(ApplicationArchitecture.png 참고)

Tomcat에서 DefaultServlet이 정적자원의 URL을 처리해준다.

mysite02까지 DispatcherServlet(URL /)이 UI처리
mysite03(Spring)부터는 DispatcherServlet보다 기저인 DefaultServlet이 UI처리
HandlerMapping에 기본값- DefaultServlet 설정

DispatcherServlet 이 모든 URL처리에 서블릿 매핑을 하였기 때문에 톰캣은 정적 자원에 대한 URL처리도
DispatcherServlet에게 넘기기 때문이다. ( 즉, DefaultServlet에 위임을 하지 못한다. )


# Application Architecture
Spring 기본구조; MVC + 3layers

* Presentation[MVC, Web Application Context(HandlerMapping, ViewResolver, MessageConverter)]
Backend Controller들 ↔ Frontend Controller에서 JSP를 통해 UI 표현
Backend Controller가 Service method 불러서 사용

   ↑ DI

* @Service[Root Application Context, Interface(Impl) 활용 실무 비지니스]
  - 비즈니스에 맞게 이름 부여할 것; writeMessage, deleteByNo
method들 존재
Service는 여러 개의 DAO들 가질 수 있음
Service 내 method간 참조하는 설계는 잘못된 설계

   ↑ DI

* @Repository[CRUD역할]
 - CRUD에 맞게 이름 부여할 것; insert, list, update, delete
DAO들 존재


* DB(RDBMS)