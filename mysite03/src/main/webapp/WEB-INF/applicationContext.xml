<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
	
	<!-- Connection pool DataSource -->
	<!-- repository conn 참고 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.mariadb.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/webdb?charset=utf8" />
		<property name="username" value="webdb" />
		<property name="password" value="webdb" />
	</bean>
	
	<!-- MyBatis SqlSessionFactoryBean/ 위의 객체를 아래에 DI시키는 중, 위 id = ref id -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/configuration.xml" />
	</bean>
	
	<context:annotation-config />

	<context:component-scan base-package="com.bitacademy.mysite.service, com.bitacademy.mysite.repository">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
	</context:component-scan>

</beans>

<!-- 
 ** datasource-connection pool
- JDBC를 통해 DB를 사용하려면, Connection 타입의 DB 연결 객체가 필요하다.
- 풀링(pooling) 기법 사용;
  정해진 개수의 DB Connection Pool에 준비하고 애플리케이션 요청때 마다 꺼내서 할당하고 돌려받아 pool에 저장.
- 엔터프라이즈 시스템에서는 반드시 DB 연결 풀 기능을 지원하는 DataSource를 사용해야한다.

 ** 아파치 Common DBCP 활용
mysite03/pom.xml; dependency 추가
Repository; @Autowired 필드 생성 후 수정
exception 패키지 생성

-->

<!-- 
 ** MyBatis SqlSessionFactoryBean
 ** mysite03.xml dependency 추가 -> applicationContext.xml bean 생성 -> configuration.xml -> user.xml
src/main/java; 실행되는 패키지
src/main/resources; 배포시 아래와 같이 배포됨 + 여기에 패키지 생성하는 이주
tomcat
 |- webapps
     |- mysite03
         |- WEB-INF
	          |- web.xml
	          |- libs(Maven Dependency)
	          |- classes
	               |- mybatis
			            |- configuration.xml
		           |- com
		                |- bitacademy
		                     |- mysite
			                      |- controller
			                          |-MainController.class

-->