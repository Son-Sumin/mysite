<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="guestbook">
	<select id="findAll" resultType="guestbookvo">  <!-- mybatis는 필드명으로 실행되기에 겟터 생성 가정 하 필드명 맞춰주기 'as regDate'  -->
		<![CDATA[
		  select no, name, contents, date_format(reg_date, '%Y/%m/%d %H:%i:%s') as regDate
		    from guestbook 
		order by reg_date desc
		]]>
	</select>
	
	<select id="findAllByNo" parameterType="long" resultType="guestbookvo">
		<![CDATA[
		  select no, name, contents, date_format(reg_date, '%Y/%m/%d %H:%i:%s') as regDate
		    from guestbook
		]]>
		<if test="_parameter > 0">  <!-- 값으로 넘어올 때 반드시 _parameter 사용 -->
			<![CDATA[
		   where no < #{_parameter }
		   ]]>
		</if>
		<![CDATA[
		order by no desc
		   limit 0, 5
		]]>
	</select>
	
	<insert id="insert" parameterType="guestbookvo">   <!-- #{필드명 } -->
		<![CDATA[
		insert
		  into guestbook
		values(null, #{name }, #{password }, #{contents }, now()) 
		]]>
		<selectKey keyProperty="no" resultType="Long" order="AFTER">  <!-- PK필드명, PK 종류, 쿼리 실행 후 이 이거 활용하겠다 -->
			<![CDATA[
			select last_insert_id();
			]]>
		</selectKey>
	</insert>
	
	<delete id="deleteByNoAndPassword" parameterType="map">  <!-- 객체 생성 후 vo로 받아도 되지만 내장된 map 사용 -->
		<![CDATA[
		delete 
		  from guestbook
		 where no =#{no } and password = #{password }
		 ]]>
	</delete>
</mapper>

<!-- 
primary key를 null이 아닌 직접 insert로 사용하고 싶을 때
   => <selectKey> 활용! primary key를 사용할 때만 사용

아래와 같은 상황이면
class AuthorService{
	deleteAuthor(no) {
	}
}

class BookService{

	registerBook(bookVo, authorVo){         -> 트랜잭션 사용(thread / javastudy 참고)
		
		authorRepository.insert(authorVo);
		
		// AuthorVo vo = authorRepository.findByName(authorVo.getName);
		// bookVo.setAuthorNo(vo.getNo());
		
		bookVo.setAuthorNo(authorVo.getNo());   => thread끼리 꼬이는거 방지
		
		bookRepository.insert(bookVo);
	}
}
-->